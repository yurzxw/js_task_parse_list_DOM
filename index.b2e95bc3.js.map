{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAI,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAoB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC9C,EAAS,EAgBb,EAHS,AAHT,CAAA,EARS,AAQc,EART,GAAG,CAAC,SAAC,CAAjB,EACE,MAAO,CACL,OAAQ,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAC1D,QAAS,CACX,CACF,EAGF,EAGc,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EAA2B,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,GAKhD,IAAM,EAAe,SAAS,aAAa,CAAC,KAE5C,CAAA,OAAO,SAAS,CAAG,GACnB,EAAc,OAAO,CAAC,SAAC,CAAvB,EAAgC,OAAA,EAAa,WAAW,CAAC,EAAK,OAAO,C,GAcrE,MADA,EAVS,AAUa,EAVR,GAAG,CAAC,SAAC,CAAjB,EACE,MAAO,CACL,KAAM,EAAU,WAAW,CAC3B,SAAU,EAAU,OAAO,CAAC,QAAQ,CACpC,OAAQ,EAAU,OAAO,CAAC,MAAM,CAChC,IAAK,EAAU,OAAO,CAAC,GAAG,AAC5B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesList = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar forget = employeesList;\nvar helper = function(list) {\n    return list.map(function(x) {\n        return {\n            salary: Number(x.dataset.salary.split(\",\").join(\"\").slice(1)),\n            element: x\n        };\n    });\n};\nemployeesList = helper(employeesList);\nvar sortList = function(list) {\n    return list.sort(function(a, b) {\n        return b.salary - a.salary;\n    });\n};\nemployeesList = sortList(employeesList);\nvar parentOfList = document.querySelector(\"ul\");\nparent.innerHTML = \"\";\nemployeesList.forEach(function(empl) {\n    return parentOfList.appendChild(empl.element);\n});\nvar getEmployees = function(list) {\n    return list.map(function(developer) {\n        return {\n            name: developer.textContent,\n            position: developer.dataset.position,\n            salary: developer.dataset.salary,\n            age: developer.dataset.age\n        };\n    });\n};\nforget = getEmployees(forget);\nalert(forget);\n\n//# sourceMappingURL=index.b2e95bc3.js.map\n","'use strict';\n\nlet employeesList = [...document.querySelectorAll('li')];\nlet forget = employeesList;\nconst helper = (list) => {\n  return list.map((x) => {\n    return {\n      salary: Number(x.dataset.salary.split(',').join('').slice(1)),\n      element: x,\n    };\n  });\n};\n\nemployeesList = helper(employeesList);\n\nconst sortList = (list) => {\n  return list.sort((a, b) => b.salary - a.salary);\n};\n\nemployeesList = sortList(employeesList);\n\nconst parentOfList = document.querySelector('ul');\n\nparent.innerHTML = '';\nemployeesList.forEach((empl) => parentOfList.appendChild(empl.element));\n\nconst getEmployees = (list) => {\n  return list.map((developer) => {\n    return {\n      name: developer.textContent,\n      position: developer.dataset.position,\n      salary: developer.dataset.salary,\n      age: developer.dataset.age,\n    };\n  });\n};\n\nforget = getEmployees(forget);\nalert(forget);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","employeesList","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forget","list","map","x","salary","Number","dataset","split","join","element","sort","a","b","parentOfList","querySelector","parent","innerHTML","forEach","empl","appendChild","alert","developer","textContent","position","age"],"version":3,"file":"index.b2e95bc3.js.map"}